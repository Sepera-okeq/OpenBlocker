import ru.justagod.plugin.CutterPlugin

buildscript {
    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()

        maven {
            url 'http://files.minecraftforge.net/maven'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}


apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: CutterPlugin

version = "1.0.7"
group = "ru.will0376.OpenBlocker"
archivesBaseName = "OpenBlocker"

sourceCompatibility = targetCompatibility = '1.8'
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
minecraft {
    version = "1.12.2-14.23.5.2784"
    runDir = "run"
    mappings = "snapshot_20180814"
    clientJvmArgs += "-Dfml.coreMods.load=ru.will0376.OpenBlocker.common.Hookloader"
    serverJvmArgs += "-Dfml.coreMods.load=ru.will0376.OpenBlocker.common.Hookloader"
}
configurations.all {
    transitive = false
}

repositories {
	mavenLocal()
    mavenCentral()
	maven { url "http://dvs1.progwml6.com/files/maven" } //JEI
}
dependencies {
    compile fileTree(dir: 'lib', include: ['*.jar'])
    compile group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'
    compile 'com.google.code.gson:gson:2.7'
    //compile group: 'net.minecraft', name: 'launchwrapper', version: '1.2'
    compile group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'
    compile group: 'org.apache.logging.log4j', name: 'log4j', version: '2.12.1', ext: 'pom'

    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
    compile group: 'org.ow2.asm', name: 'asm', version: '6.0'
   // compile group: 'org.lwjgl', name: 'lwjgl', version: '3.1.0'
    //compile group: 'org.objectweb.asm', name: 'commons', version: '3.1'
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
    /*from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it)  }
        configurations.compile.each { println it }
    }*/
		jar {
			manifest {
				attributes 'FMLAT': 'forge_at.cfg'
            }
        }
}

cutter {
    annotation = 'ru.justagod.mineplugin.GradleSideOnly'
    classesCache = file('cutter-cache')
    classesDirs = [compileJava.destinationDir]
    def clientSide = side('CLIENT')
    def serverSide = side('SERVER')
    builds {
        client {
            targetSides = [clientSide]
            primalSides = [clientSide, serverSide]
        }
        server {
            targetSides = [serverSide]
            primalSides = [clientSide, serverSide]
        }
    }
}